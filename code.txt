import openai
from fastapi import FastAPI, HTTPException
from fastapi import Request
from fastapi.responses import JSONResponse

app = FastAPI()

openai.api_key = "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"

@app.post("/")
async def handle_request(request: Request):
    # retrieve the json data from the request
    payload = await request.json()

    # extract the necessary information from the payload
    intent = payload['queryResult']['intent']['displayName']
    parameters = payload['queryResult']['parameters']
    question = payload['queryResult']['queryText']

    if intent == 'StressManagementTips':
        messages = []
        message = question
       
 messages.append({"role": "user", "content": message})
        response = openai.ChatCompletion.create(model="gpt-3.5-turbo", messages=messages)
        reply = response["choices"][0]["message"]["content"]
        messages.append({"role": "assistant", "content": reply})
        print(reply)

        # Return the formatted response
        #return JSONResponse(content={"fulfillmentText": reply})

--------------------------------------------------------------------------
from fastapi import FastAPI, HTTPException, Request
from fastapi.responses import JSONResponse
import openai
import os

#from helper.openai_api import text_completion  # Assuming you have a module named openai_api with a function text_completion

app = FastAPI()

openai_api_key = os.environ.get('OPENAI_API_KEY')


# @app.get('/')
# def home():
#     return 'All is well...'

@app.post('/')
async def es_receive_message(request: Request):


    try:
        data = await request.json()
        query_text = data['queryResult']['queryText']

        result = openai.ChatCompletion.create(model="gpt-3.5-turbo", messages=[{"role":"user","content":query_text}])
        generated_content=result['choices'][0]['message']['content']


        return JSONResponse(content={'fulfillmentText': generated_content})
    except Exception as e:
        error_message = f"Error processing request: {str(e)}"
        print(error_message)
        raise HTTPException(status_code=500, detail=error_message)

        return JSONResponse(content={'fulfillmentText': 'Something went wrong.'})
------------------------------------------------------------------------
Hello!!! So tell me how are you feeling about your exam. Are you feeling "stressed" or "positive" about your exam
-welcome intent response--
.
